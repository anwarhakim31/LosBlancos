@use "./variables" as *;

@mixin flex($justify, $align, $direction) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
  flex-direction: $direction;
}

@mixin flex-center() {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin media($point) {
  @if map-has-key($breakpoints, $point) {
    @media (min-width: map-get($breakpoints,$point)) {
      @content;
    }
  }
}

@mixin text-overflow($width: 100%) {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  width: $width;
}

@mixin transition($properties, $duration, $timing-function) {
  transition: $properties $duration $timing-function;
}

@mixin center-position() {
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin centerLeft-Position() {
  top: 50%;
  left: 10px;
  transform: translateY(-50%);
}

@mixin centerRight-Position($right) {
  top: 50%;
  right: $right;
  transform: translateY(-50%);
}

@mixin btn() {
  width: 100%;
  height: 2.5rem;
  font-size: 0.875rem;
  padding: 0.25rem;
  color: $white;
  font-weight: 500;
  letter-spacing: 1px;
  border-radius: 0.4rem;
  border: 1px solid $gray-400;
  background-color: $primary;
  @include flex(center, center, null);
  gap: 4px;
  cursor: pointer;
  @include transition(all, 0.3s, ease-in-out);
}

@mixin container {
  width: 100%;
  max-width: $container;
  margin: 0 auto;

  @include media(sm) {
    max-width: 540px;
  }

  @include media(md) {
    max-width: $container;
  }
}

@mixin container-gap() {
  padding: 1rem;
  @include media(md) {
    padding-inline: 2rem;
  }
}
